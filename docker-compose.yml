version: "3.7"

services:
  api:
    command:       [
      "./scripts/wait-for-it.sh",
      "mongo:27017",
      "--",
      "./scripts/wait-for-it.sh",
      "elasticsearch:9200",
      "--",
      "./scripts/wait-for-it.sh",
      "pubsub:9200",
      "--",
      "yarn",
      "start:production", # producion required to overwrite PUBSUB_EMULATOR_HOST
    ]
    environment:
      - MOCK_EMAIL=true
      - MONGO_URI=mongodb://mongo/tectonic_dev
      - PUBSUB_EMULATOR_HOST=pubsub:8200
      - ELASTICSEARCH_URI=http://elasticsearch:9200
    build:
      context: ./services/api
      dockerfile: Dockerfile
      args:
        ENV_NAME: development
    volumes:
      - ./services/api/src:/service/src
      - ./services/api/emails:/service/emails
      - ./services/api/fixtures:/service/fixtures
      - ./services/api/scripts:/service/scripts
      - ./services/api/.env:/service/.env
      - ./services/api/openapi:/service/openapi
    ports:
      - "2300:2300"
    links:
      - mongo
      - pubsub
      - elasticsearch
    depends_on:
      - mongo
      - pubsub
      - elasticsearch

  web:
    command: ["yarn", "start"]
    build:
      context: ./services/web
      dockerfile: Dockerfile
      args:
        ENV_NAME: development
    volumes:
      - ./services/web/src:/service/src
    ports:
      - "2200:2200"
      - "34001:34001"
    depends_on:
      - api

  mongo:
    image: mongo:4.4.4
    command: --serviceExecutor adaptive
    logging:
      driver: none
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    volumes:
      - db-data:/data/db
    ports:
      - 27017:27017

  pubsub:
    build:
      context: ./services/pubsub-emulator
      dockerfile: Dockerfile
    ports:
      - "8200:8200"

  elasticsearch:
    image: elasticsearch:7.9.3
    container_name: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - es-data:/usr/share/elasticsearch/data
    environment:
      - "discovery.type=single-node"

volumes:
  db-data:
  es-data:
